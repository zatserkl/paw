MACRO SP02 work='N'
*--- CAUTION: The data must starts from the 6th line of this file! ---  00001000
*(1)  Parameters of the calculated matrix SP-02 (AX0,AY0: in cm)        00002000
*-----------------------------------------------------------------------00003000
* #     parameter         X          THETA          Y           PHI     00004000
* 1             X   -9.41600D-01 -6.28200D+00  0.00000D+00  0.00000D+00 00006000
* 2            TH   -5.94900D-03 -1.15500D+00  0.00000D+00  0.00000D+00 00007000
* 3             Y    0.00000D+00  0.00000D+00 -5.78100D+00 -1.18520D+01 00008000
* 4            PH    0.00000D+00  0.00000D+00 -5.84300D-02 -4.05500D-01 00009000
* 5           DEL    1.80100D+00  2.93200D+00  0.00000D+00  0.00000D+00 00010000
* 6          X**2    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00011000
* 7        X * TH    4.13500D-03 -3.49100D-03  0.00000D+00  0.00000D+00 00012000
* 8         X * Y    0.00000D+00  0.00000D+00  2.53300D-01  2.87400D-01 00013000
* 9        X * PH    0.00000D+00  0.00000D+00  2.03100D-02  2.52600D-02 00014000
*10       X * DEL    1.83500D-02  4.11600D-02  0.00000D+00  0.00000D+00 00015000
*11         TH**2   -4.14900D-05 -2.76400D-03  0.00000D+00  0.00000D+00 00016000
*12        TH * Y    0.00000D+00  0.00000D+00  1.01900D-02  5.22700D-03 00017000
*13       TH * PH    0.00000D+00  0.00000D+00 -1.96800D-03 -4.18900D-03 00018000
*14      TH * DEL    4.63200D-03  8.74100D-03  0.00000D+00  0.00000D+00 00019000
*15          Y**2    4.11800D-02  0.00000D+00  0.00000D+00  0.00000D+00 00020000
*16        Y * PH    2.82400D-03 -3.47900D-02  0.00000D+00  0.00000D+00 00021000
*17       Y * DEL    0.00000D+00  0.00000D+00  8.28500D-02  1.28900D-01 00022000
*18         PH**2   -8.33000D-05 -3.15400D-03  0.00000D+00  0.00000D+00 00023000
*19      PH * DEL    0.00000D+00  0.00000D+00  1.53100D-02  2.54400D-02 00024000
*20        DEL**2   -1.42900D-02 -2.28200D-02  0.00000D+00  0.00000D+00 00025000
*21          X**3    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00026000
*22     X**2 * TH    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00027000
*23      X**2 * Y    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00028000
*24     X**2 * PH    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00029000
*25    X**2 * DEL    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00030000
*26     X * TH**2    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00031000
*27    X * TH * Y    0.00000D+00  0.00000D+00 -1.25700D-03  0.00000D+00 00032000
*28   X * TH * PH    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00033000
*29  X * TH * DEL    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00034000
*30      X * Y**2    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00035000
*31    X * Y * PH    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00036000
*32   X * Y * DEL    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00037000
*33     X * PH**2    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00038000
*34  X * PH * DEL    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00039000
*35    X * DEL**2    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00040000
*36         TH**3    8.77000D-07  0.00000D+00  0.00000D+00  0.00000D+00 00041000
*37     TH**2 * Y    0.00000D+00  0.00000D+00  5.00400D-05  0.00000D+00 00042000
*38    TH**2 * PH    0.00000D+00  0.00000D+00  1.25800D-05  0.00000D+00 00043000
*39   TH**2 * DEL    4.68400D-06  0.00000D+00  0.00000D+00  0.00000D+00 00044000
*40     TH * Y**2    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00045000
*41   TH * Y * PH    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00046000
*42  TH * Y * DEL    0.00000D+00  0.00000D+00 -1.60300D-04  0.00000D+00 00047000
*43    TH * PH**2    3.29300D-06  0.00000D+00  0.00000D+00  0.00000D+00 00048000
*44 TH * PH * DEL    0.00000D+00  0.00000D+00  1.68800D-05  0.00000D+00 00049000
*45   TH * DEL**2   -4.22800D-05  0.00000D+00  0.00000D+00  0.00000D+00 00050000
*46          Y**3    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00051000
*47     Y**2 * PH    0.00000D+00  0.00000D+00 -1.42800D-02  0.00000D+00 00052000
*48    Y**2 * DEL    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00053000
*49     Y * PH**2    0.00000D+00  0.00000D+00 -2.57100D-03  0.00000D+00 00054000
*50  Y * PH * DEL    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00055000
*51    Y * DEL**2    0.00000D+00  0.00000D+00 -7.90000D-04  0.00000D+00 00056000
*52         PH**3    0.00000D+00  0.00000D+00 -1.74000D-04  0.00000D+00 00057000
*53   PH**2 * DEL    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00058000
*54   PH * DEL**2    0.00000D+00  0.00000D+00 -1.41800D-04  0.00000D+00 00059000
*55        DEL**3    1.30000D-04  2.11900D-04  0.00000D+00  0.00000D+00 00060000
*56    DZ (BX.Cè)    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00061000
*57   DTH (BX.Cè)    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00062000
*58    DX (BX.Cè)    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00063000
*59   DPH (BX.Cè)    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00064000
*60    DY (BX.Cè)    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00065000
*61   DZ (BõX.Cè)    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00066000
*62  DTH (BõX.Cè)    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00067000
*63   DX (BõX.Cè)    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00068000
*64  DPH (BõX.Cè)    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00069000
*65   DY (BõX.Cè)    0.00000D+00  0.00000D+00  0.00000D+00  0.00000D+00 00070000
*--- End of data -------------------------------------------------------00071000 

SP02 = ''
g/imp SP02
IF [SP02] = '' THEN
g/cr SP02 [0]
*--- Begin of COMMON declaration for the first call

D2MODE=''; g/imp D2MODE
* COMMON CHAMB may be created by D2MODE
if [D2MODE] = '' then
APPL COMIS QUIT
*                                         @METAGS COMMON_CHAMB
*                                         01-24-97 10:14pm
*--------------- COMMON_CHAMB ---------------
*
      integer NCHAN,NCENTR
      real CWIDTH
      COMMON /CHAMB/ NCHAN,NCENTR,CWIDTH
      NCHAN  = 96
      NCENTR = 36
      CWIDTH = 2.
      END
QUIT
endif

APPL COMIS QUIT
*                                         @METAGS COMMON_SPADIM_SPARIM
*                                         01-24-97 10:14pm
*--------------- COMMON_SPADIM_SPARIM ---------------
*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /SPADIM/ AAX(55),X0,AAT(55),TH0,AAY(55),Y0H,AAP(55),PH0
      COMMON /SPARIM/ AX(66),AT(66),AY(66),AP(66)
      END
QUIT
*--- End of COMMON declaration
ENDIF

*--- Register the basic routines
APPL COMIS QUIT
*                                         @METAGS CHAMBER
*                                         03-21-98 00:38am
*--------------- CHAMBER ---------------
*
      SUBROUTINE CHAMBER(N,Nc,CWIDmm)
      COMMON /CHAMB/ NCHAN,NCENTR,CWIDTH
      use CHAMB
      if (N.EQ.0) then
         N = NCHAN
         Nc = NCENTR
         CWIDmm = CWIDTH
      elseif (N.LT.0) then
         print*, NCHAN,NCENTR,CWIDTH
      else
         NCHAN  = N
         NCENTR = Nc
         CWIDTH = CWIDmm
      endif
      END

*                                         @METAGS M02RE
*                                         01-24-97 11:18pm
*--------------- M02RE ---------------
*
      SUBROUTINE M02RE(NF,JTR)
*      SUBROUTINE MTRDRF(NF,JTR)                                        00001000
*
*     DOUBLE PRECISION version
*
* 24-JAN-97. Changed variable names:
*            XF0 -> X0, THF0 -> TH0, YF0 -> Y0, PHF0 -> PH0
*            and common declaration for SPADIM
*            to make identical common declaration for SPADIM
*            in the routines MTRDRF and SPMRAY
*
*            Changed common declaration for SPARIM:
*            statement DIMENSION is removed
*            and array dimensions are declared in COMMON
*
C-----------------------------------------------------------------------00002000
C  HAáHAóEHàE: óTEHàE MATPàñõ Cè àá îOPMATHOâ áAèàCà                    00003000
C  èAPAMETPõ: NF: N îAâãA C MATPàñEâ                                    00004000
C     JTR: =1(2): Ñãü èPüMOâ (OÅPATHOâ) MATPàñõ                         00005000
C  COMMON-Åã: /SPADIM/: èEPEÑAET èAPAMETPõ MATPàñõ: DIM(55)+F0          00006000
C     /SPARIM/: èEPEÑAET èAPAMETPõ MATPàñõ: DIM(66)                     00007000
C-----------------------------------------------------------------------00008000
C                                                                       00009000
C  OÅECèEóEHàE óTEHàü MATPàñ Cè àá îAâãA N NF                           00010000
c
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
c
      DIMENSION F0X(10),F0T(10),F0Y(10),F0P(10)                         00011000
*      DIMENSION AAX(55),AAT(55),AAY(55),AAP(55)                        00012000
*      COMMON /SPADIM/ AAX,XF0,AAT,THF0,AAY,YF0,AAP,PHF0                00013000
comis COMMON /SPADIM/ AAX(55),X0,AAT(55),TH0,AAY(55),Y0H,AAP(55),PH0    ********
*       DIMENSION AX(66),AT(66),AY(66),AP(66)                           00014000
*       COMMON /SPARIM/ AX,AT,AY,AP                                     00015000
comis  COMMON /SPARIM/ AX(66),AT(66),AY(66),AP(66)                      00015000
      use SPADIM,SPARIM
C                                                                       00016000
C  CóàTõBAHàE MACCàBOB AAX,..,AAP àá îAâãA N NF                         00017000
      REWIND NF                                                         00018000
      NPRST=5                                                           00019000
      DO 10 IAA=1,NPRST                                                 00020000
   10 READ (NF,20)                                                      00021000
   20 FORMAT(1X)                                                        00022000
      DO 30 IAA=1,55                                                    00023000
      READ (NF,40) AAX(IAA),AAT(IAA),AAY(IAA),AAP(IAA)                  00024000
       AX(IAA)=AAX(IAA)                                                 00025000
       AT(IAA)=AAT(IAA)                                                 00026000
       AY(IAA)=AAY(IAA)                                                 00027000
   30  AP(IAA)=AAP(IAA)                                                 00028000
   40 FORMAT(19X,4(1X,E12.5))                                           00029000
      DO 50 IAA=1,10                                                    00030000
      READ (NF,40) F0X(IAA),F0T(IAA),F0Y(IAA),F0P(IAA)                  00031000
       IAB=55+IAA                                                       00032000
       AX(IAB)=F0X(IAA)                                                 00033000
       AT(IAB)=F0T(IAA)                                                 00034000
       AY(IAB)=F0Y(IAA)                                                 00035000
   50  AP(IAB)=F0P(IAA)                                                 00036000
       X0=F0X(8)                                                        00037000
      TH0=F0T(7)                                                        00038000
       Y0=F0Y(10)                                                       00039000
      PH0=F0P(9)                                                        00040000
      IF(JTR.EQ.2)  X0=F0X(3)                                           00041000
      IF(JTR.EQ.2) TH0=F0T(2)                                           00042000
      IF(JTR.EQ.2)  Y0=F0Y(5)                                           00043000
      IF(JTR.EQ.2) PH0=F0P(4)                                           00044000
C                                                                       00045000
      RETURN                                                            00046000
      END                                                               00047000

*                                         @METAGS SPMRAY
*                                         01-24-97 10:16pm
*--------------- SPMRAY ---------------
*
      SUBROUTINE SPMRAY(DEL,X,TH,Y,PH,XS,THS,YS,PHS)                    00001000
*
*     DOUBLE PRECISION version
*
C-----------------------------------------------------------------------00002000
C  HAáHAóEHàE: èO èAPAMETPAM TPEKA óACTàñõ, èPà JTR=1(2): B CK 'BXOÑ    00003000
C     Cè' ('BõXOÑ Cè') BOCCTAHABãàBAET èAPAMETPõ TPEKA óACTàñõ B        00004000
C     CK 'BõXOÑ Cè' (CK 'BXOÑ Cè') MATPàóHõM CèOCOÅOM                   00005000
C  èAPAMETPõ: DEL: àMèìãúC óACTàñõ                          / % /       00006000
C     X,Y: KOOPÑ.èAPAMETPõ TPEKA óACTàñõ                    / MM /      00007000
C     TH,PH: ìÉãOBõE èAPAMETPõ TPEKA óACTàñõ                / MPAÑ /    00008000
C      /B CàCT.KOOPÑ.: JTR=1(2): 'BXOÑ Cè'('BõXOÑ Cè')/                 00009000
C     XS,YS: KOOPÑ.èAPAMETPõ TPEKA óACTàñõ                  / MM /      00010000
C     THS,PHS: ìÉãOBõE èAPAMETPõ TPEKA óACTàñõ              / MPAÑ /    00011000
C      /B CàCT.KOOPÑ.: JTR=1(2): 'BõXOÑ Cè'('BXOÑ Cè')/                 00012000
C  COMMON-Åã.: /SPADIM/: èEPEÑAET MATPàñì Cè: AX,ATH,AY,APH             00013000
C-----------------------------------------------------------------------00014000
c
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      real DEL,X,TH,Y,PH,XS,THS,YS,PHS
c
comis COMMON /SPADIM/ AAX(55),X0,AAT(55),TH0,AAY(55),Y0,AAP(55),PH0     00015000
      DIMENSION XX(5)                                                   00016000
      use SPADIM
C                                                                       00017000
      NMAX=5                                                            00018000
      L=NMAX                                                            00019000
      MN=14                                                             00020000
      IF(NMAX.EQ.5) MN=20                                               00021000
C  èPEÑBAPàTEãúHOE áAHìãEHàE                                            00022000
      XS8=0.D0                                                          00023000
      THS8=0.D0                                                         00024000
      YS8=0.D0                                                          00025000
      PHS8=0.D0                                                         00026000
C  èOÑÉOTOBKA MACCàBA èEPEMEHHõX XX                                     00027000
      XX(1)=X                                                           00028000
      XX(2)=TH                                                          00029000
      XX(3)=Y                                                           00030000
      XX(4)=PH                                                          00031000
      XX(5)=DEL                                                         00032000
C  èEPEBOÑ KOOPÑàHAT àá MM B CM                                         00033000
      XX(1)=XX(1)/10.D0                                                 00034000
      XX(3)=XX(3)/10.D0                                                 00035000
C  BOCCT.ÉOPàá.èPOEKñàû TPEKA                                           00036000
      G0=0.D0                                                           00037000
      THS8=TH0                                                          00038000
      DO 10 I=1,NMAX                                                    00039000
      G0=G0+AAX(I)*XX(I)                                                00040000
      THS8=THS8+AAT(I)*XX(I)                                            00041000
      DO 10 K=I,NMAX                                                    00042000
      L=L+1                                                             00043000
      G0=G0+AAX(L)*XX(I)*XX(K)                                          00044000
      THS8=THS8+AAT(L)*XX(I)*XX(K)                                      00045000
      DO 10 J=K,NMAX                                                    00046000
      MN=MN+1                                                           00047000
      G0=G0+AAX(MN)*XX(I)*XX(K)*XX(J)                                   00048000
      THS8=THS8+AAT(MN)*XX(I)*XX(K)*XX(J)                               00049000
   10 CONTINUE                                                          00050000
C  èEPEBOÑ KOOPÑàHATõ X àá CM B MM                                      00051000
      XS8=(X0+G0)*10.D0                                                 00052000
C                                                                       00053000
      L=NMAX                                                            00054000
      MN=14                                                             00055000
      IF(NMAX.EQ.5) MN=20                                               00056000
C  BOCCT.BEPTàK.èPOEKñàû TPEKA                                          00057000
      V0=0.D0                                                           00058000
      PHS8=PH0                                                          00059000
      DO 20 I=1,NMAX                                                    00060000
      V0=V0+AAY(I)*XX(I)                                                00061000
      PHS8=PHS8+AAP(I)*XX(I)                                            00062000
      DO 20 K=I,NMAX                                                    00063000
      L=L+1                                                             00064000
      V0=V0+AAY(L)*XX(I)*XX(K)                                          00065000
      PHS8=PHS8+AAP(L)*XX(I)*XX(K)                                      00066000
      DO 20 J=K,NMAX                                                    00067000
      MN=MN+1                                                           00068000
      V0=V0+AAY(MN)*XX(I)*XX(K)*XX(J)                                   00069000
      PHS8=PHS8+AAP(MN)*XX(I)*XX(K)*XX(J)                               00070000
   20 CONTINUE                                                          00071000
C  èEPEBOÑ KOOPÑàHATõ Y àá CM B MM                                      00072000
      YS8=(Y0+V0)*10.D0                                                 00073000
c
      XS  = XS8
      THS = THS8
      YS  = YS8
      PHS = PHS8
C                                                                       00074000
      RETURN                                                            00075000
C     DEBUG INIT,SUBTRACE                                               00076000
      END                                                               00077000

*                                         @METAGS FILLSP
*                                         03-30-98 10:52am
*--------------- FILLSP ---------------
*
      SUBROUTINE FILLSP()
      logical used
      lun = 39
  100 lun = lun+1
      inquire (UNIT=lun, OPENED=used)
      if (used) goto 100
c     .. read the SP-02 matrix
      open (lun, FILE='SP02.kum', STATUS='OLD')
      JTR = 1
      call M02RE(lun,JTR)
      close(lun)
      END

*                                         @METAGS SetDmm
*                                         03-11-98 11:39am
*--------------- SetDmm ---------------
*
      SUBROUTINE SetDmm(Dmm)
      use SPADIM
      IAA=5
      Dcm = .1*Dmm
      AAX(IAA) = Dcm
      END
*                                         @METAGS GetDmm
*                                         03-11-98 11:39am
*--------------- GetDmm ---------------
*
      real function GetDmm()
      use SPADIM
      IAA=5
      Dcm = AAX(IAA)
      GetDmm = 10.*Dcm
      END
*                                         @METAGS FOCPAR
*                                         03-23-98 06:31pm
*--------------- FOCPAR ---------------
*
      SUBROUTINE FOCPAR(Ec, Dexp,Rfoc,amudeg)
C
C     Ec  - the cental energy, MeV
C     Rcm - chamber distance to the flange, cm
C     Dexp - experimental dispersion, mm/%
C     Dfoc - focal plane distance to the flange, cm
C
*     .. Up to 600 MeV D does not depend from Ec
      Dexp = 18.17 - 0.*Ec
*     .. focal plane distance to the flange
      Rfoc = 94.87+0.01137*Ec
*     .. focal plane angle, degree
      amudeg = 29.60 + .5515e-2*Ec - .1522e-4*Ec**2
      END

*                                         @METAGS DvsER
*                                         03-13-98 10:53pm
*--------------- DvsER ---------------
*
      SUBROUTINE DvsER(Ec,Rcm,ALPr, D0,Dslope)
      LOGICAL XCROSS, lres
*     .. set chamber parameters
      call CHAMBER(96,36,2.)
*     .. fit to experimental data
      call FOCPAR(Ec, Dexp,Rfoc,amudeg)
*     .. store current dispersion
      Dold = GetDmm()
*     .. set experimental dispersion
      call SetDmm(Dexp)
*
      x0  = 0.
      th0 = 0.
*     .. good delta range
      del1 = -2.
      del2 =  1.
      
      E = Ec*(1 + .01*del1)
      call RAY(E,Ec,x0,th0, x1,th1)
      lres = XCROSS(x1,th1,Rfoc,Rcm,ALPr, Xch,Nch)
      posmm1 = Xch
      D1 = (0.-posmm1)/del1

      E = Ec*(1 + .01*del2)
      call RAY(E,Ec,x0,th0, x1,th1)
      lres = XCROSS(x1,th1,Rfoc,Rcm,ALPr, Xch,Nch)
      posmm2 = Xch
      D2 = (0.-posmm2)/del2
*     .. slope
      Dslope = (D1-D2)/(posmm1-posmm2)
*     .. D(0)
      D0 = D1 - Dslope*posmm1
*     .. restore dispersion
      call SetDmm(Dold)
      END

*                                         @METAGS RAY
*                                         01-25-97 03:28am
*--------------- RAY ---------------
*
      SUBROUTINE RAY(E,Ec,x0,th0, x1,th1)
*
*     E and Ec in the like units
*     x0,x1 in mm
*     th0,th1 in rad
*
*     The greater th0 and th1 correspond the greater scattering angle
*     x0 runs along the scattering angle
*     x1 runs along the chamber channels
*
      th0mr = 1000.*th0
      DEL = 100.*(E-Ec)/Ec
      y0 = 0.
      ph0mr = 0.
      call SPMRAY(DEL,x0,th0mr,y0,ph0mr, x1,th1mr,y1,ph1mr)
      x1  = -x1
      th1 = .001*th1mr
      END

*                                         @METAGS RAYTOT
*                                         01-25-97 03:28am
*--------------- RAYTOT ---------------
*
      SUBROUTINE RAYTOT(E,Ec,x0,th0,y0,ph0, x1,th1)
*
*     E and Ec in the like units
*     x0,y0,x1 in mm
*     th0,ph0,th1 in rad
*
*     The greater th0 and th1 correspond the greater scattering angle
*     x0 runs along the scattering angle
*     x1 runs along the chamber channels
*
      th0mr = 1000.*th0
      DEL = 100.*(E-Ec)/Ec
      y0i = -y0
      ph0mr = -1000.*ph0
      call SPMRAY(DEL,x0,th0mr,y0i,ph0mr, x1,th1mr,y1,ph1mr)
      x1  = -x1
      th1 = .001*th1mr
      END

*                                         @METAGS XCROSS
*                                         01-25-97 03:28am
*--------------- XCROSS ---------------
*
      LOGICAL FUNCTION XCROSS(x1,th1,Rfoc,Rcm,ALPr, Xch,Nch)
*     x1 in mm
*     th1 in rad
*     Rfoc - the distance focal plane from flange, cm
*     Rcm  - the distance chamber from flange, cm
*     ALPr - the chamber angle, rad. Counter clockwise.
*     Xch - coordinate of the cross point, mm
*     Nch - crossed channel
*
*     Returns .TRUE. if particle crosses the chamber
*
      use CHAMB
      COMMON /CHAMB/ NCHAN,NCENTR,CWIDTH
*     NCHAN  - the number of channels
*     NCENTR - the central channel. Central particle crosses the center of Nc
*     CWIDTH - channel width, mm
      XCROSS = .FALSE.
      R = (Rcm-Rfoc)*10.
      Xch = (x1 - R*TAN(th1)) / (COS(ALPr) - SIN(ALPr)*TAN(th1))
*     .. channel No
      Nch = INT((NCENTR+.5) + (Xch/CWIDTH))
      if ((Nch.GE.1) .AND. (Nch.LE.NCHAN)) XCROSS=.TRUE.
      END
QUIT

*
* Read the data from this file
* and fill the SP-matrix commons
*
macroname = [0]
last = $INDEX([macroname],'#') - 1
thisfile = $SUBSTRING([macroname],1,[last])
LUN = 40
for/file [LUN] [thisfile] OLD
call M02RE([LUN],1)
close [LUN]
mess COMMONs SPADIM and SPARIM are declared and filled by SP matrix.

if $UPPER([work]) = 'N' then
   mess For use macros please run with work=Y
   EXITM
endif

*                 @METAGS Macros
*  Macro SP02
*

Ec     = 300
Rcm    = 76
ALPdeg = 0
Nc     = 36
region = MEDIUM

exec ali create
opt grid

exec for

exec SetEc [Ec]
exec SetChamber [Rcm] [ALPdeg] [Nc]

exec region [region]
exec new
RETURN

*                                         @METAGS SetEc
*--------------- SetEc ---------------
*
MACRO SetEc Ec
if $UPPER([1])='HELP' .OR. [Ec]='' then
   mess Usage:    [0] Ec
   g/imp Ec
   mess Now Ec = [Ec]
   stopm
endif

g/cr Ec [Ec]
call SetDexp($RSIGMA([Ec]))
RETURN

*                                         @METAGS SetChamber
*--------------- SetChamber ---------------
*
MACRO SetChamber Rcm ALPdeg Nc
if $UPPER([1])='HELP' then
   mess Usage:    [0] Rcm ALPdeg Nc
   g/imp Rcm,ALPdeg,Nc
   mess Now Rcm = [Rcm] cm, ALPdeg = [ALPdeg] degree, Nc = [Nc]
   stopm
endif

if [Rcm]<>''    then; g/cr Rcm [Rcm]       ; endif
if [ALPdeg]<>'' then; g/cr ALPdeg [ALPdeg] ; endif
if [Nc]<>''     then; g/cr Nc [Nc]         ; endif
RETURN

*                                         @METAGS Demo
*--------------- Demo ---------------
*
MACRO Demo
opt grid
exec region medium
exec newray 0 0 1
exec ray 3 0 4
exec ray -3 0 6
RETURN

*                                         @METAGS ali
*--------------- ali ---------------
*
MACRO ali opt=create
a/[opt] -c SP02         'exec '//[0]
a/[opt] -c SetEc        'exec '//$WORD([0],1,1,#)#SetEc
a/[opt] -c SetChamber   'exec '//$WORD([0],1,1,#)#SetChamber
a/[opt] -c Demo         'exec '//$WORD([0],1,1,#)#Demo
a/[opt] -c new          'exec '//$WORD([0],1,1,#)#new
a/[opt] -c region       'exec '//$WORD([0],1,1,#)#region
a/[opt] -c fline        'exec '//$WORD([0],1,1,#)#fline
a/[opt] -c ray          'exec '//$WORD([0],1,1,#)#ray
a/[opt] -c raytot       'exec '//$WORD([0],1,1,#)#raytot
a/[opt] -c newray       'exec '//$WORD([0],1,1,#)#newray
a/[opt] -c newraytot    'exec '//$WORD([0],1,1,#)#newraytot
a/[opt] -c chamber      'exec '//$WORD([0],1,1,#)#chamber
a/[opt] -c SPMRAY       'exec '//$WORD([0],1,1,#)#SPMRAY
a/[opt] -c D0ER         'exec '//$WORD([0],1,1,#)#D0ER
a/[opt] -c DslopeER     'exec '//$WORD([0],1,1,#)#DslopeER
RETURN

*                                         @METAGS region
*--------------- region ---------------
*
MACRO region xmi xma zmi zma
g/cr xmin; g/cr xmax; g/cr zmin; g/cr zmax
opt = $UPPER([1])
CASE [opt] IN
   (TINY)      exec region -3.75 6.25  60   90; exitm
   (SMALL)     exec region -7.5  12.5  60   90; exitm
   (MEDIUM)    exec region -7.5  12.5  40  100; exitm
   (LARGE)     exec region -7.5  12.5  20  120; exitm
   (HUGE)      exec region -20.  40.    0  200; exitm
ENDCASE

if [xmi]='' then; xmi=[xmin]; read xmi 'xmin'; endif
if [xma]='' then; xma=[xmax]; read xma 'xmax'; endif
if [zmi]='' then; zmi=[zmin]; read zmi 'zmin'; endif
if [zma]='' then; zma=[zmax]; read zma 'zmax'; endif
xmin = [xmi]; xmax = [xma]; zmin = [zmi]; zmax = [zma]
RETURN

*                                         @METAGS new
*--------------- new ---------------
*
MACRO new size=medium
g/imp xmin,xmax,zmin,zmax
if ([xmin]='').OR.([xmax]='').OR.([zmin]='').OR.([zmin]='') then
   exec region [size]
   g/imp xmin,xmax,zmin,zmax
endif

null [xmin] [xmax] $SIGMA(-1*[zmax]) $SIGMA(-1*[zmin])
atitle 'x, cm' '-z, cm'

exec fline
exec chamber

g/cr xtpos 0
RETURN

*                                         @METAGS newray
*--------------- newray ---------------
*
MACRO newray delta=0 theta=0 ci=1 x0=0
exec new
exec ray [delta] [theta] [ci] x0=[x0]
RETURN
*
MACRO newraytot delta=0 theta=0 ci=1 x0=0 y0=0 ph0=0
if $UPPER([1])=HELP then
   mess Usage:    [0] delta=0 theta=0 ci=1 x0=0 y0=0 ph0=0
   stopm
endif
exec new
exec raytot [delta] [theta] [ci] [x0] [y0] [ph0]
RETURN

*                                         @METAGS chamber
*--------------- chamber ---------------
*
MACRO chamber
* channel lays right of tick
g/imp Rcm,ALPdeg,Nc

alphar = $RSIGMA([ALPdeg]*pi/180)
hlow = .2*([Nc]-.5)
htot = .2*96
x1 = $SIGMA(-1*[hlow]*cos([alphar]))
y1 = $SIGMA([Rcm] + [hlow]*sin([alphar]))
x2 = $SIGMA([x1] + [htot]*cos([alphar]))
y2 = $SIGMA([y1] - [htot]*sin([alphar]))
y1i = -1.*[y1]
y2i = -1.*[y2]

axis [x1] [x2] [y1i] [y2i] 1 97 1010 CHOPT=I

* make ticks for the channels that a multiple of 5
hlow = .2*([Nc]-5 - .5)
x1 = $SIGMA(-1*[hlow]*cos([alphar]))
y1 = $SIGMA([Rcm] + [hlow]*sin([alphar]))
y1i = -1*[y1]
axis [x1] [x2] [y1i] [y2i] 1 92  110 CHOPT=U
RETURN

*                                         @METAGS fline
*--------------- fline ---------------
*
MACRO fline lty=3 ci=2
if $UPPER([1])='HELP' then
   mess Usage:    [0] lty=3 ci=2
   stopm
endif

g/imp Ec,zmin,zmax

ci0  = $GRAFINFO('?plci')
lty0 = $GRAFINFO('?ltyp')
set plci [ci]
set ltyp [lty]


call fline($RSIGMA([Ec]),$RSIGMA([zmin]),$RSIGMA([zmax]))

set plci [ci0]
set ltyp [lty0]
RETURN

*                                         @METAGS SPMRAY
*--------------- SPMRAY ---------------
*
MACRO SPMRAY delta=0. theta=0.
pi = $RSIGMA(pi)
tomrad=1000.*[pi]/180.
del = $RSIGMA([delta])
th = $RSIGMA([theta]*1000.*pi/180.)
sigma XS=0.
sigma THS=0.
sigma YS=0.
sigma PHS=0.
call SPMRAY([del],0.,[th],0.,0.,XS,THS,YS,PHS)
x1 = -.1*xs
th1 = $RSIGMA(.001*THS*180./pi)
mess x1 = [x1], th1 = [th1]
v/de XS,THS,YS,PHS
RETURN

*                                         @METAGS ray
*--------------- ray ---------------
*
MACRO ray delta=0 theta=0 x0=0 ci=0
if $UPPER([1])=HELP then
   mess Usage:    [0] delta=0 theta=0 x0=0 ci=0
   stopm
endif

g/imp zmin,zmax
g/imp Ec,Rcm,ALPdeg
E = $RSIGMA([Ec]*(1+.01*[delta]))
x0  = $RSIGMA([x0])
th0 = $RSIGMA([theta]*pi/180)

ci0 = $GRAFINFO('?plci')
if [ci]=0 then
   g/imp ci
   if [ci]=0 then; g/cr ci 0; endif
   ci = [ci]+1
   if [ci] > 6 then; ci=1; endif
endif
set plci [ci]

call RAYpl([E],$RSIGMA([Ec]),[x0],[th0],$RSIGMA([zmin]),$RSIGMA([zmax]))

ALPr = $RSIGMA([ALPdeg]*pi/180)
R    = $RSIGMA([Rcm])
fcall = xRAY([E],$RSIGMA([Ec]),[x0],[th0],[R],[ALPr])
x = $CALL([fcall])
fcall = nRAY([E],$RSIGMA([Ec]),[x0],[th0],[R],[ALPr])
n = $ICALL([fcall])
*if [n] < 1 .OR. [n] > 96 then; n='"Z#'; endif

SELNT 1
g/imp xtpos

yupline = $GRAFINFO('?YSIZ') - .8
y1up = [yupline] - .5
y2up = [y1up]    - .5
ydownline = 1.2
y1down = .8
y2down = .2

if [xtpos]=0 then
   xtpos1 = [xtpos] + .5
   itx [xtpos1] [y1up]   'delta'
   itx [xtpos1] [y2up]   'theta'

   itx [xtpos1] [y1down] 'chan'
   itx [xtpos1] [y2down] 'x,cm'
   xtpos = [xtpos]+2.0
endif

xtpos1 = [xtpos] + 1.
line [xtpos] [yupline] [xtpos1] [yupline]
itx [xtpos]  [y1up] $FORMAT([delta],F6.2)
itx [xtpos]  [y2up] [theta]

line [xtpos] [ydownline] [xtpos1] [ydownline]
itx [xtpos]  [y1down] [n]
itx [xtpos]  [y2down] $FORMAT([x],F6.2)

xtpos = [xtpos] + 1.5
SELNT 10

set plci [ci0]
RETURN

*                                         @METAGS raytot
*--------------- raytot ---------------
*
MACRO raytot delta=0 theta=0 x0=0 y0=0 ph0=0 ci=0
if $UPPER([1])=HELP then
   mess Usage:    [0] delta=0 theta=0 x0=0 y0=0 ph0=0 ci=0
   stopm
endif

g/imp zmin,zmax
g/imp Ec,Rcm,ALPdeg
E = $RSIGMA([Ec]*(1+.01*[delta]))
x0  = $RSIGMA([x0])
y0  = $RSIGMA([y0])
th0 = $RSIGMA([theta]*pi/180)
ph0 = $RSIGMA([ph0]*pi/180)

ci0 = $GRAFINFO('?plci')
if [ci]=0 then
   g/imp ci
   if [ci]=0 then; g/cr ci 0; endif
   ci = [ci]+1
   if [ci] > 6 then; ci=1; endif
endif
set plci [ci]

zmi = $RSIGMA([zmin])
zma = $RSIGMA([zmax])
call RAYTOTpl([E],$RSIGMA([Ec]),[x0],[th0],[y0],[ph0],[zmi],[zma])

ALPr = $RSIGMA([ALPdeg]*pi/180)
R    = $RSIGMA([Rcm])
fcall = xRAYTOT([E],$RSIGMA([Ec]),[x0],[th0],[y0],[ph0],[R],[ALPr])
x = $CALL([fcall])
fcall = nRAYTOT([E],$RSIGMA([Ec]),[x0],[th0],[y0],[ph0],[R],[ALPr])
n = $ICALL([fcall])
*if [n] < 1 .OR. [n] > 96 then; n='"Z#'; endif

SELNT 1
g/imp xtpos

yupline = $GRAFINFO('?YSIZ') - .8
y1up = [yupline] - .5
y2up = [y1up]    - .5
ydownline = 1.2
y1down = .8
y2down = .2

if [xtpos]=0 then
   xtpos1 = [xtpos] + .5
   itx [xtpos1] [y1up]   'delta'
   itx [xtpos1] [y2up]   'theta'

   itx [xtpos1] [y1down] 'chan'
   itx [xtpos1] [y2down] 'x,cm'
   xtpos = [xtpos]+2.0
endif

xtpos1 = [xtpos] + 1.
line [xtpos] [yupline] [xtpos1] [yupline]
itx [xtpos]  [y1up] $FORMAT([delta],F6.2)
itx [xtpos]  [y2up] [theta]

line [xtpos] [ydownline] [xtpos1] [ydownline]
itx [xtpos]  [y1down] [n]
itx [xtpos]  [y2down] $FORMAT([x],F6.2)

xtpos = [xtpos] + 1.5
SELNT 10

set plci [ci0]
RETURN

*                                         @METAGS D0ER
*--------------- D0ER ---------------
*
MACRO D0ER Emin=100 Emax=600 Rmin=30 Rmax=120 ncx=40 ncy=40
mess Please, wait..
*fun2 1 D0ER(x,y,0.) [ncx] [Emin] [Emax] [ncy] [Rmin] [Rmax]
fun2 12345 D0ER [ncx] [Emin] [Emax] [ncy] [Rmin] [Rmax]
atitle 'Ec, MeV' 'R, cm'
RETURN
*                                         @METAGS DslopeER
*--------------- DslopeER ---------------
*
MACRO DslopeER Emin=100 Emax=600 Rmin=30 Rmax=120 ncx=40 ncy=40
mess Please, wait..
fun2 12345 DslopeER [ncx] [Emin] [Emax] [ncy] [Rmin] [Rmax]
atitle 'Ec, MeV' 'R, cm'
RETURN

*                                         @METAGS for.SECTION
*--------------- for ---------------
*
MACRO for
APPL COMIS QUIT
*                                         @METAGS fline.COMIS
*                                         04-08-98 11:40am
*--------------- fline ---------------
*
      SUBROUTINE fline(Ec,zmin,zmax)
      real x(2),z(2)
      call FOCPAR(Ec, Dexp,Rfoc,amudeg)
      tanmu = tan(amudeg*3.14159/180.)
      x(1) =    (Rfoc-zmin)*tanmu
      x(2) = -1*(zmax-Rfoc)*tanmu
      z(1) = -zmin
      z(2) = -zmax
      call IPL(2,x,z)
      END

*                                         @METAGS SetDexp.COMIS
*                                         04-08-98 11:41am
*--------------- SetDexp ---------------
*
      SUBROUTINE SetDexp(Ec)
      call FOCPAR(Ec, Dexp,Rfoc,amudeg)
      call SetDmm(Dexp)
      END

*                                         @METAGS RAYpl.COMIS
*                                         04-08-98 12:14pm
*--------------- RAYpl ---------------
*
      SUBROUTINE RAYpl(E,Ec,x0,th0,zmin,zmax)
      logical lres,XCROSS
      real x(2),z(2)
      call RAY(E,Ec,x0,th0, x1,th1)
      call FOCPAR(Ec, Dexp,Rfoc,amudeg)
      Rcm = zmin
      lres = XCROSS(x1,th1,Rfoc,Rcm,ALPr, Xmm,Nch)
      x(1) = .1*Xmm
      Rcm = zmax
      lres = XCROSS(x1,th1,Rfoc,Rcm,ALPr, Xmm,Nch)
      x(2) = .1*Xmm
      z(1) = -zmin
      z(2) = -zmax
      call IPL(2,x,z)
      END
*                                         @METAGS RAYTOTpl.COMIS
*                                         04-08-98 12:14pm
*--------------- RAYTOTpl ---------------
*
      SUBROUTINE RAYTOTpl(E,Ec,x0,th0,y0,ph0,zmin,zmax)
      logical lres,XCROSS
      real x(2),z(2)
      call RAYTOT(E,Ec,x0,th0,y0,ph0, x1,th1)
      call FOCPAR(Ec, Dexp,Rfoc,amudeg)
      Rcm = zmin
      lres = XCROSS(x1,th1,Rfoc,Rcm,ALPr, Xmm,Nch)
      x(1) = .1*Xmm
      Rcm = zmax
      lres = XCROSS(x1,th1,Rfoc,Rcm,ALPr, Xmm,Nch)
      x(2) = .1*Xmm
      z(1) = -zmin
      z(2) = -zmax
      call IPL(2,x,z)
      END

*                                         @METAGS xRAYTOT.COMIS
*                                         04-08-98 02:08pm
*--------------- xRAYTOT ---------------
*
      real function xRAYTOT(E,Ec,x0,th0,y0,ph0,Rcm,ALPr)
      logical lres,XCROSS
      call RAYTOT(E,Ec,x0,th0,y0,ph0, x1,th1)
      call FOCPAR(Ec, Dexp,Rfoc,amudeg)
      lres = XCROSS(x1,th1,Rfoc,Rcm,ALPr, Xch,Nch)
      xRAYTOT = .1*Xch
      END
*                                         @METAGS nRAYTOT.COMIS
*                                         04-08-98 02:16pm
*--------------- nRAYTOT ---------------
*
      integer function nRAYTOT(E,Ec,x0,th0,y0,ph0,Rcm,ALPr)
      logical lres,XCROSS
      call RAYTOT(E,Ec,x0,th0,y0,ph0, x1,th1)
      call FOCPAR(Ec, Dexp,Rfoc,amudeg)
      lres = XCROSS(x1,th1,Rfoc,Rcm,ALPr, Xch,Nch)
      nRAYTOT = Nch
      END

*                                         @METAGS xRAY.COMIS
*                                         04-08-98 02:08pm
*--------------- xRAY ---------------
*
      real function xRAY(E,Ec,x0,th0,Rcm,ALPr)
      logical lres,XCROSS
      call RAY(E,Ec,x0,th0, x1,th1)
      call FOCPAR(Ec, Dexp,Rfoc,amudeg)
      lres = XCROSS(x1,th1,Rfoc,Rcm,ALPr, Xch,Nch)
      xRAY = .1*Xch
      END
*                                         @METAGS nRAY.COMIS
*                                         04-08-98 02:16pm
*--------------- nRAY ---------------
*
      integer function nRAY(E,Ec,x0,th0,Rcm,ALPr)
      logical lres,XCROSS
      call RAY(E,Ec,x0,th0, x1,th1)
      call FOCPAR(Ec, Dexp,Rfoc,amudeg)
      lres = XCROSS(x1,th1,Rfoc,Rcm,ALPr, Xch,Nch)
      nRAY = Nch
      END



      subroutine fline0(Ec,WNYMIN,WNYMAX)
      real x(200),z(200)
      call FOCPAR(Ec, Dexp,Rfoc,amudeg)
      Dold = GetDmm()
      call SetDmm(Dexp)

*     .. cross 2 rays to find the first point of fplane
      delta = 1.
      E = Ec*(1.+.01*delta)
      th0 = -0.1
      call RAY(E,Ec,0.,th0, x1,th1)
      th0 = 0.1
      call RAY(E,Ec,0.,th0, x2,th2)
      zcross1 = (x2-x1)/(tan(th2)-tan(th1))
      xcross1 = x1 - zcross1*tan(th1)

      delta = -1.
      E = Ec*(1.+.01*delta)
      th0 = -0.1
      call RAY(E,Ec,0.,th0, x1,th1)
      th0 = 0.1
      call RAY(E,Ec,0.,th0, x2,th2)
      zcross2 = (x2-x1)/(tan(th2)-tan(th1))
      xcross2 = x1 - zcross2*tan(th1)

      call SetDmm(Dold)

      call MESS('xcross1,zcross1,xcross2,zcross2')
      print*, xcross1,zcross1,xcross2,zcross2

      print*, 'WNYMIN,WNYMAX:', WNYMIN,WNYMAX
      Rmin = -10.*WNYMAX
      Rmax = -10.*WNYMIN

      tanmu = (xcross2-xcross1)/(zcross1-zcross2)
      print*, 'tanmu =', tanmu
      xmax = xcross1 - (Rmax-zcross1)*tanmu
      xmin = xcross1 + (zcross1-Rmin)*tanmu

*     .. draw the line
      x(1) = .1*xmax
      x(2) = .1*xmin
      z(1) = WNYMAX
      z(2) = WNYMIN
      print*, 'x,z:', x,z
      call WAIT(' ')
      call IPL(2,x,z)
      end

*                                         @METAGS D0.COMIS
*                                         04-08-98 06:09pm
*--------------- D0 ---------------
*
      function D0(Ec,Rcm,ALPr)
      call DvsER(Ec,Rcm,ALPr, aD0,aDslope)
      D0 = aD0
      END
*                                         @METAGS Dslope.COMIS
*                                         04-08-98 06:09pm
*--------------- Dslope ---------------
*
      function Dslope(Ec,Rcm,ALPr)
      call DvsER(Ec,Rcm,ALPr, aD0,aDslope)
      Dslope = aDslope
      END
*                                         @METAGS D0ER
*                                         04-08-98 06:19pm
*--------------- D0ER ---------------
*
      function D0ER(Ec,Rcm)
      ALPr = 0.
      call DvsER(Ec,Rcm,ALPr, aD0,aDslope)
      D0ER = aD0
      END
*                                         @METAGS DslopeER
*                                         04-08-98 06:19pm
*--------------- DslopeER ---------------
*
      function DslopeER(Ec,Rcm)
      ALPr = 0.
      call DvsER(Ec,Rcm,ALPr, aD0,aDslope)
      DslopeER = aDslope
      END
QUIT
RETURN
