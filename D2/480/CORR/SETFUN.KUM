*                                         @METAGS SetFun
*--------------- SetFun ---------------
*
MACRO SetFun
OK = 0
if $UPPER([1])='HELP' .OR. [1]=' ' then
   mess Usage:    [0]//' fun1 [[op fun2] [op fun3] ...] VERB=1'
   mess Example:  [0]//' fun1 fun2'
   mess Example:  [0]//' fun1 fun2 VERB=0'
   EXITM [OK]
endif

* variable VERB should be setted in command line (p.203 of PAW manual)
if [VERB] = '[VERB]' then
   VERB = 1
endif
if [VERB] <> 0 then
   mess Confirm the command line: [*]
   wait
endif

op_1 = +
fun_1 = [1]
shift
file = [fun_1].for
if $FEXIST([file]) = 0 then
   mess File [file] did not found
   EXITM [OK]
endif
flist = [file]
nfun = 1
while [1] <> ' ' do
   nfun = [nfun]+1
   op_[nfun] = [1]
   shift
   fun_[nfun] = [1]
   shift
   file = [fun_[nfun]].for
   if $FEXIST([file]) = 0 then
      mess File [file] did not found
      EXITM [OK]
   endif

   flist = [flist]+[file]
endwhile
comline = copy [flist] afun.for /Y
if [VERB] <> 0 then
   mess Shell command line: [comline]
   wait
endif
dummy = $SHELL([comline])

exec FOR

call afunOPEN
do i=1, [nfun]
   call afunADDL($QUOTE([op_[i]]),$QUOTE([fun_[i]]))
enddo
call afunCLOSE

APPL COMIS QUIT
include afun.for
QUIT

OK = 1
RETURN [OK]

*                                         @METAGS FOR
*--------------- FOR ---------------
*
MACRO FOR
APPL COMIS QUIT
      subroutine afunOPEN()
      character*32 line(3)

      lun = 40
      open (lun, FILE='afun.for', STATUS='OLD')
      do while (.TRUE.)
         read (lun, 1, END=1000) line
*         call wr3x32(6,line)
      enddo
 1000 continue
      write (lun, 10)
      RETURN
    1 format(3A)
   10 format(/
     &   6X, 'REAL FUNCTION afun(x)    '/
     &   '*     Autogenerated function '/
     &   6X, 'afun = 0.                '/
     &   6X, 'res  = 0.                '/
     &   )
      end

      subroutine afunADDL(op,fun)
      character*32 op,fun
      lun = 40
      lenop  = LENOCC(op)
      lenfun = LENOCC(fun)
      write (lun,10) op(1:lenop), fun(1:lenfun)
   10 format (6X, 'res = res', A, A, '(x)')
      end

      subroutine afunCLOSE()
      lun = 40
      write (lun,10)
      close(lun)
   10 format (6X, 'afun = res' / 6X, 'END')
      end
QUIT
RETURN
